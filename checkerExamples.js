"use strict";
exports.__esModule = true;
exports.codeInput = exports.errorInput = void 0;
exports.errorInput = "\nProcess exited with code 1\nUncaught SyntaxError /home/abehlok/Typescript/Error Checker/test.ts:1\ninterface User {\n          ^^^^\n\nSyntaxError: Unexpected identifier 'User'\n    at internalCompileFunction (internal/vm:73:18)\n    at wrapSafe (internal/modules/cjs/loader:1153:20)\n    at Module._compile (internal/modules/cjs/loader:1205:27)\n    at Module._extensions..js (internal/modules/cjs/loader:1295:10)\n    at Module.load (internal/modules/cjs/loader:1091:32)\n    at Module._load (internal/modules/cjs/loader:938:12)\n    at executeUserEntryPoint (internal/modules/run_main:83:12)\n    at <anonymous> (internal/main/run_main_module:23:47)\n\n";
exports.codeInput = "interface User {\n    id: number;\n    name: string;\n    friends?: User[];\n}\n\nfunction getUserNameById(users: User[], userId: number): string | undefined {\n    const user = users.find(u => u.ide === userId); // Error: Property 'ide' does not exist on type 'User'. \n    return user && user.name;\n}\n\nfunction getFriendNames(user: User): string[] {\n    return user.friends.map(friend => friend.name); // Error: Object is possibly 'undefined'.\n}\n\nlet userList: Users[] = [ // Error: Cannot find name 'Users'.\n    { id: 1, name: \"John\", friends: [{ id: 2, name: \"Jane\" }] },\n    { id: 2, name: \"Jane\", friends: [{ id: 1, name: \"John\" }, { id: 3, name: \"Jack\" }] },\n    { id: 3, name: \"Jack\" },\n];\n\nconsole.log(getUserNameById(userList, 2));\nconsole.log(getFriendNames(userList[1]));\n";
